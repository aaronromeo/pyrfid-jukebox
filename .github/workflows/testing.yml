name: Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - "**"

permissions:
  issues: write
  pull-requests: write

jobs:
  golangci:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "~1.21" # Use the version of Go in your project

      - name: Run unit tests
        run: |
          make test > test_output.txt 2>&1
          cat test_output.txt
      
      - name: Generate test coverage report
        run: go tool cover -html=./cover.out -o ./cover.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./cover.html

      - name: Upload test_output report
        uses: actions/upload-artifact@v2
        with:
          name: test_output
          path: ./test_output.txt

      - name: Read test output
        id: test-output
        run: |
          content=$(cat test_output.txt)
          content="${content//'%'/'%25'}"  # Escape %
          content="${content//$'\n'/'%0A'}"  # Escape newlines
          content="${content//$'\r'/'%0D'}"  # Escape carriage returns
          echo "::set-output name=results::$content"

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Go Test Output

      - name: Delete PR comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue_number = ${{ github.event.pull_request.number }};
            const comment_id = ${{ steps.fc.outputs.comment-id }};
            if (comment_id) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment_id
              });
            }
            
      - name: Post test output as comment
        if: github.event.pull_request != null
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Go Test Output
            previous comment ${{ steps.fc.outputs.comment-id }};
            ```
            ${{ steps.test-output.outputs.results }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}