name: Unit Testing

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - "**"

permissions:
  issues: write
  pull-requests: write

jobs:
  go-tests:
    name: Run Go unit tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "~1.21" # Use the version of Go in your project

      - name: Run tests and generate test coverage
        run: go test ./... -coverprofile=./cover.out -covermode=atomic -coverpkg=./... > test_output.txt

      - name: Generate test coverage report
        run: go tool cover -html=./cover.out -o ./cover.html

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: ./cover.html

      - name: Upload test_output report
        uses: actions/upload-artifact@v2
        with:
          name: test_output
          path: ./test_output.txt

      - name: Read test output
        id: test-output
        run: |
          content=$(cat test_output.txt)
          content="${content//'%'/'%25'}"  # Escape %
          content="${content//$'\n'/'%0A'}"  # Escape newlines
          content="${content//$'\r'/'%0D'}"  # Escape carriage returns
          echo "::set-output name=results::$content"

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Go Test Output

      - name: Delete comment
        if: steps.fc.outputs.comment-id != ''
        uses: detomarco/delete-comments@v1.0.4
        with:
          token: ${GITHUB_TOKEN}
          repository: owner/repo
          comment-id: ${{ steps.fc.outputs.comment-id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post test output as comment
        if: github.event.pull_request != null
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Go Test Output
            ```
            ${{ steps.test-output.outputs.results }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #   python-tests:
  #     name: Run Python unit tests
  #     runs-on: ubuntu-latest

  #     steps:
  #       - name: Checkout code
  #         uses: actions/checkout@v2

  #       - name: Set up Python
  #         uses: actions/setup-python@v2
  #         with:
  #           python-version: 3.x

  #       - name: Install dependencies
  #         run: pip install -r requirements.txt

  #       - name: Run unit tests
  #         run: pytest
